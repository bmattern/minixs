#!/usr/bin/env python
"""
Interpolate input x,y data onto a common x grid and average 
"""

import minixs as mx
import os, sys
from numpy import loadtxt, linspace, zeros, sqrt, isnan
from scipy.interpolate import splrep, splev

usage = "Usage: %s [.xes files to average] > output.xes" % sys.argv[0]

if len(sys.argv) < 2:
  print usage
  exit()

# load data files
files = sys.argv[1:]
data = [mx.emission.load(f) for f in files]

xes = mx.emission.EmissionSpectrum()
xes.spectrum = zeros(data[0].spectrum.shape)

# use grid from first data file
xes.spectrum[:,0] = data[0].spectrum[:,0]

# sum up interpolated values
for d in data:
  rep = splrep(d.spectrum[:,0], d.spectrum[:,1])
  xes.spectrum[:,1] += splev(xes.spectrum[:,0], rep)
  rep = splrep(d.spectrum[:,0], d.spectrum[:,2]**2)
  sigma = splev(xes.spectrum[:,0], rep)
  sigma[sigma<0] = 0
  sigma[isnan(sigma)] = 0
  xes.spectrum[:,2] += sigma

# average
xes.spectrum[:,1] /= len(data)
xes.spectrum[:,2] = sqrt(xes.spectrum[:,2]) / len(data)
xes.spectrum[:,3:5] = 0

xes.save(sys.stdout)
